/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.33
 * Generated at: 2016-05-12 18:09:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.finalproject.parkpal.dto.Member;

public final class userLogged_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.finalproject.parkpal.dto.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=windows-1256");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \r\n");
      out.write("   \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<script src=\"http://maps.googleapis.com/maps/api/js?key=AIzaSyCuK0lnSgOTVwMuBHXI22JfpSVfopATzqs\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- Google key AIzaSyCuK0lnSgOTVwMuBHXI22JfpSVfopATzqs -->\r\n");
      out.write("\r\n");
      out.write("<!-- <script>\r\n");
      out.write("var x = document.getElementById(\"demo\");\r\n");
      out.write("\r\n");
      out.write("function getLocation() {\r\n");
      out.write("    if (navigator.geolocation) {\r\n");
      out.write("        navigator.geolocation.getCurrentPosition(showPosition, showError);\r\n");
      out.write("    } else { \r\n");
      out.write("        x.innerHTML = \"Geolocation is not supported by this browser.\";\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function showPosition(position) {\r\n");
      out.write("    x.innerHTML = \"Latitude: \" + position.coords.latitude + \r\n");
      out.write("    \"<br>Longitude: \" + position.coords.longitude;\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function showError(error) {\r\n");
      out.write("    switch(error.code) {\r\n");
      out.write("        case error.PERMISSION_DENIED:\r\n");
      out.write("            x.innerHTML = \"User denied the request for Geolocation.\"\r\n");
      out.write("            break;\r\n");
      out.write("        case error.POSITION_UNAVAILABLE:\r\n");
      out.write("            x.innerHTML = \"Location information is unavailable.\"\r\n");
      out.write("            break;\r\n");
      out.write("        case error.TIMEOUT:\r\n");
      out.write("            x.innerHTML = \"The request to get user location timed out.\"\r\n");
      out.write("            break;\r\n");
      out.write("        case error.UNKNOWN_ERROR:\r\n");
      out.write("            x.innerHTML = \"An unknown error occurred.\"\r\n");
      out.write("            break;\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("</script> -->\r\n");
      out.write("<!-- <script>\r\n");
      out.write("function initialize() {\r\n");
      out.write("  var mapProp = {\r\n");
      out.write("    center:new google.maps.LatLng(42.336111, -83.050556),\r\n");
      out.write("    zoom:16,\r\n");
      out.write("    mapTypeId:google.maps.MapTypeId.ROADMAP\r\n");
      out.write("  };\r\n");
      out.write("  var map=new google.maps.Map(document.getElementById(\"googleMap\"),mapProp);\r\n");
      out.write("}\r\n");
      out.write("google.maps.event.addDomListener(window, 'load', initialize);\r\n");
      out.write("</script> -->\r\n");
      out.write("<meta http-equiv=\"Content-Type\"\r\n");
      out.write("\tcontent=\"text/html; charset=windows-1256\">\r\n");
      out.write("<title>User Logged Successfully</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<h1><center>\r\n");
      out.write("\t\t");
Member currentUser = (Member)session.getAttribute("currentSessionUser");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\tWelcome<strong>\r\n");
      out.write("\t\t");
      out.print(currentUser.getFirstName() + " " + currentUser.getLastName());
      out.write("</strong>\r\n");
      out.write("\t</center></h1>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<form action=\"register\" method=\"get\">\r\n");
      out.write("\t<input type=\"text\" name=\"email\" placeholder=\"Where are you going?\"><br></form>\r\n");
      out.write("\t\r\n");
      out.write("\t<button onclick=\"getLocation()\">Try It</button>\r\n");
      out.write("\t<p id=\"demo\"></p>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<iframe width='100%' height='500px' frameBorder='0' src='https://a.tiles.mapbox.com/v4/parkingproject.04393gl3/attribution,zoompan,zoomwheel,geocoder,share.html?access_token=pk.eyJ1IjoicGFya2luZ3Byb2plY3QiLCJhIjoiY2lvM2JibzZlMDA2aHZha2pqbXIwZ3o1YyJ9.yeAYc0MgmNQyeboOzEbDXg'></iframe>\r\n");
      out.write("\t<!-- <center><div id=\"googleMap\" style=\"width:500px;height:380px;\"></div></center> -->\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
