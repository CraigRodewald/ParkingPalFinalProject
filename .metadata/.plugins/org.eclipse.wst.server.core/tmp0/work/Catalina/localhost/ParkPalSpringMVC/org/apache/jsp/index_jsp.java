/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.33
 * Generated at: 2016-05-16 18:00:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link href=\"resources/assets/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("  <!-- FontAwesome -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"resources/css/font-awesome.min.css\">\r\n");
      out.write("    <!-- Animation -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"resources/css/animate.css\">\r\n");
      out.write("    <!-- Bxslider CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"resources/css/bxslider.css\">\r\n");
      out.write("    <!-- Template styles-->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"resources/css/style.css\">\r\n");
      out.write("    <!-- Responsive styles-->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"resources/css/responsive.css\">\r\n");
      out.write("    \r\n");
      out.write("<script src='https://api.mapbox.com/mapbox-gl-js/v0.18.0/mapbox-gl.js'></script>\r\n");
      out.write("<link href='https://api.mapbox.com/mapbox-gl-js/v0.18.0/mapbox-gl.css' rel='stylesheet' />\r\n");
      out.write("\r\n");
      out.write("<title>ParkPal</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("  <div >\r\n");
      out.write("    <div >\r\n");
      out.write("      <div class=\"darkBackdrop\"><p>ParkPal</p>\r\n");
      out.write("      <button onclick=\"window.location.href='loginPage'\">Log in</button>\r\n");
      out.write("      <button onclick=\"window.location.href='register'\">Sign up</button>\r\n");
      out.write("      </div>\r\n");
      out.write("        <center>\r\n");
      out.write("          <h1>ParkPal</h1>\r\n");
      out.write("          <p>Find the best places to park in Detroit.</p>\r\n");
      out.write("        </center>\r\n");
      out.write("\r\n");
      out.write("        <!-- search form 6 -->\r\n");
      out.write("      <div class=\"button_box2\">\r\n");
      out.write("        <center>\r\n");
      out.write("            <!-- <form class=\"form-wrapper-2 cf\">\r\n");
      out.write("              <input id=\"address\" type=\"text\" placeholder=\"Enter location here...\" required>\r\n");
      out.write("            <button type=\"submit\">Search</button> -->\r\n");
      out.write("            \r\n");
      out.write("            <input id=\"address\" value=\"\" placeholder=\"Enter a City\"> <input\r\n");
      out.write("          id=\"submit\" onclick=\"window.location.href='userLogged'\" type=\"button\"\r\n");
      out.write("          value=\"Submit\">\r\n");
      out.write("          <!-- </form> -->\r\n");
      out.write("        </center>\r\n");
      out.write("      </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \t<!-- <img src=\"resources/images/bx-slider/NewMapBoxBackdrop.jpg\" /> -->\r\n");
      out.write("        <script>\r\n");
      out.write("\t\tvar stringLat;\r\n");
      out.write("\t\tvar stringLong;\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\twindow.addEventListener(\"resize\", myFunction);\r\n");
      out.write("\t\tvar x = 0;\r\n");
      out.write("\t\tvar lat = stringLat;\r\n");
      out.write("\t\tvar lng = stringLong;\r\n");
      out.write("\t\tconsole.log(stringLat, stringLong);\r\n");
      out.write("\t\tvar firstPart= '<iframe width=\"100%\" height=\"600px\" src=\"//www.parkme.com/widget/?&header=false&lat=';\r\n");
      out.write("\t\tvar middlePart= '&lng=';\r\n");
      out.write("\t\tvar lastPart='&zoom=16&duration=120\" frameborder=\"0\" style=\"border: 1px solid silver;\" allowfullscreen></iframe><div style=\"width: 850px; font-size: 8pt; text-align:right; color:grey;\"> Powered by <a style=\"color:grey !important; text-decoration:none;\" href=\"http://www.parkme.com/\">ParkMe</a></div>';\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction myFunction() {\r\n");
      out.write("\t\t\tvar lat = stringLat;\r\n");
      out.write("\t\t\tvar lng = stringLong;\r\n");
      out.write("\t\t\tconsole.log(stringLat, stringLong);\r\n");
      out.write("    \t\tdocument.getElementById(\"redrawMap\").innerHTML = firstPart.concat(lat,middlePart,lng,lastPart);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction initMap() {\r\n");
      out.write("\t    \tvar map = new google.maps.Map(document.getElementById('map'), {\r\n");
      out.write("\t      \tzoom: 4,\r\n");
      out.write("\t      \tcenter: {lat: 39.83, lng: -98.58}\r\n");
      out.write("\t    \t});\r\n");
      out.write("\t    \r\n");
      out.write("\t    \tvar geocoder = new google.maps.Geocoder();\r\n");
      out.write("\t    \r\n");
      out.write("\t   \t\tdocument.getElementById('submit').addEventListener('click', function() {\r\n");
      out.write("\t      \tgeocodeAddress(geocoder, map);\r\n");
      out.write("\t    \t});\r\n");
      out.write("\t   \t\r\n");
      out.write("\t  \t}\r\n");
      out.write("  \r\n");
      out.write("    \tfunction geocodeAddress(geocoder, resultsMap) {\r\n");
      out.write("     \t\tvar address = document.getElementById('address').value;\r\n");
      out.write("     \t\r\n");
      out.write("    \t \tgeocoder.geocode({'address': address}, function(results, status) {\r\n");
      out.write("\r\n");
      out.write("        \tif (status === google.maps.GeocoderStatus.OK) {\r\n");
      out.write("          \t\tresultsMap.setCenter(results[0].geometry.location);\r\n");
      out.write("          \t\tvar marker = new google.maps.Marker({\r\n");
      out.write("\r\n");
      out.write("            \tmap: resultsMap,\r\n");
      out.write("            \tposition: results[0].geometry.location\r\n");
      out.write("          \t});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("          var lat = results[0].geometry.location.lat();\r\n");
      out.write("          var lon = results[0].geometry.location.lng();\r\n");
      out.write("          console.log(\"Longitude\",lon,\"latitude\", lat);\r\n");
      out.write("          stringLong = lon.toString();\r\n");
      out.write("          stringLat = lat.toString();\r\n");
      out.write("        \t}\r\n");
      out.write("         else {\r\n");
      out.write("          \talert('Geocode was not successful for the following reason: ' + status);\r\n");
      out.write("        \t}\r\n");
      out.write("        \t\r\n");
      out.write("      \t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
