package com.finalproject.parkpal.controller;

import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.finalproject.parkpal.dao.MemberDAO;
import com.finalproject.parkpal.dao.NewMemberDAO;
import com.finalproject.parkpal.dto.Member;

@Controller
public class ParkingPalController {
	
	@RequestMapping("/loginPage")
	public ModelAndView login(@RequestParam(value = "email", required = false) String email,
							  @RequestParam(value = "password", required = false) String password){
		
		try {

			Member user = new Member();
			user.setEmail(email);
			user.setPassword(password);

			user = MemberDAO.login(user);

			if (user.isValid()) {

				HttpSession session = request.getSession(true);
				session.setAttribute("currentSessionUser", user);
				ModelAndView model = new ModelAndView("userLogged"); // logged-in
										// page
			}

			else
				ModelAndView model = new ModelAndView("invalidLogin"); // error
				return model;						// page
		}

		catch (Throwable theException) {
			System.out.println(theException);
		}
	}
		
		ModelAndView model = new ModelAndView("loginPage");
		
		return model;
	}
	
	@RequestMapping("/userLogged")
	public ModelAndView userLogged(){
		ModelAndView model = new ModelAndView("userLogged");
		
		return model;
	}
	
	@RequestMapping("/register")
	public ModelAndView registerGet(@RequestParam(value = "email", required = false) String email,
									@RequestParam(value = "password", required = false) String password,
									@RequestParam(value = "first_name", required = false) String firstName,
									@RequestParam(value = "last_name", required = false) String lastName){
		
		try{
			Member newMember = new Member();
			newMember.setEmail(email);
			newMember.setPassword(password);
			newMember.setFirstName(firstName);
			newMember.setLastName(lastName);

			if (email!= null || password != null || firstName != null || lastName != null) {
				System.out.println("Adding user to database");
				NewMemberDAO.addNewUserToDatabase(newMember);
				ModelAndView model = new ModelAndView("loginPage");
				return model;
			}
		}

		catch (Throwable theException) {
			System.out.println(theException);
		}
		ModelAndView model = new ModelAndView("register");
		return model;
	}
	
	@RequestMapping("/invalidLogin")
	public ModelAndView invalidLogin(){
		ModelAndView model = new ModelAndView("invalidLogin");
		
		return model;
	}

}